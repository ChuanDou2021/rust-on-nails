import { Context } from '../interfaces';
export interface Plugin<T = Record<string, unknown>> {
    verifyConditions?: (pluginConfig: T, context: Context) => Promise<void>;
    generateNotes?: (pluginConfig: T, context: Context) => Promise<unknown>;
    addChannel?: (pluginConfig: T, context: Context) => Promise<unknown>;
    analyzeCommits?: (pluginConfig: T, context: Context) => Promise<unknown>;
    verifyRelease?: (pluginConfig: T, context: Context) => Promise<void>;
    prepare?: (pluginConfig: T, context: Context) => Promise<void>;
    publish?: (pluginConfig: T, context: Context) => Promise<unknown>;
    success?: (pluginConfig: T, context: Context) => Promise<void>;
    fail?: (pluginConfig: T, context: Context) => Promise<void>;
}
