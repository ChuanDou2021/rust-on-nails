"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dockerPush = exports.dockerPull = exports.dockerTag = exports.dockerLogin = void 0;
const execa = require("execa");
async function dockerLogin({ userName, password, registry = '', }, { cwd, env, stdout, stderr }) {
    const result = execa('docker', ['login', registry, '--username', userName, '--password-stdin'], { input: password, env, cwd });
    // result.stdout.pipe(stdout, { end: false });
    // result.stderr.pipe(stderr, { end: false });
    return await result;
}
exports.dockerLogin = dockerLogin;
async function dockerTag(name, tag, { cwd, env, stdout, stderr }) {
    const result = execa('docker', ['tag', name, tag], { cwd, env });
    // result.stdout.pipe(stdout, { end: false });
    // result.stderr.pipe(stderr, { end: false });
    return await result;
}
exports.dockerTag = dockerTag;
async function dockerPull(tag, { cwd, env, stdout, stderr }) {
    const result = execa('docker', ['pull', tag], { cwd, env });
    // result.stdout.pipe(stdout, { end: false });
    // result.stderr.pipe(stderr, { end: false });
    return await result;
}
exports.dockerPull = dockerPull;
async function dockerPush(tag, { cwd, env, stdout, stderr }) {
    const result = execa('docker', ['push', tag], { cwd, env });
    // result.stdout.pipe(stdout, { end: false });
    // result.stderr.pipe(stderr, { end: false });
    return await result;
}
exports.dockerPush = dockerPush;
//# sourceMappingURL=docker-utils.js.map